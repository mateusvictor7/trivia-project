{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Reposit\\xF3rios/trivia-project/src/Pages/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { setUser } from '../Actions';\nimport { setToken } from '../Actions/setLogin';\nimport SettingsButton from '../Components/SettingsButton';\nimport TriviaLogo216 from '../Components/TriviaLogoSizes/TriviaLogo216';\nimport TriviaLogo144 from '../Components/TriviaLogoSizes/TriviaLogo144';\nimport TriviaLogo96 from '../Components/TriviaLogoSizes/TriviaLogo96';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  sizeScreen() {\n    const base = 765;\n    const top = 1100;\n\n    if (window.screen.width > top) {\n      return React.createElement(TriviaLogo216, {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    if (window.screen.width < top && window.screen.width > base) {\n      return React.createElement(TriviaLogo144, {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(TriviaLogo96, {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  validateLogin() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const validateName = name.length > 1;\n    const validateEmail = email.length > 1;\n    return validateName && validateEmail;\n  }\n\n  handleClick() {\n    const _this$props = this.props,\n          saveUser = _this$props.saveUser,\n          setLogin = _this$props.setLogin;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name;\n    saveUser(email, name);\n    setLogin();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.sizeScreen()), React.createElement(\"div\", {\n      className: \"insert-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"context-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      className: \"input-login\",\n      placeholder: \"Name\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"text\",\n      value: email,\n      className: \"input-login\",\n      placeholder: \"E-mail\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"context-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/trivia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play\",\n      className: \"btn-play\",\n      disabled: !this.validateLogin(),\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Play\")), React.createElement(SettingsButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveUser: (email, name) => dispatch(setUser(email, name)),\n  setLogin: () => dispatch(setToken())\n});\n\nLogin.propTypes = {\n  saveUser: PropTypes.func.isRequired,\n  setLogin: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/mateus/Reposit√≥rios/trivia-project/src/Pages/Login.js"],"names":["React","Component","connect","PropTypes","Link","setUser","setToken","SettingsButton","TriviaLogo216","TriviaLogo144","TriviaLogo96","Login","constructor","props","state","name","email","handleChange","bind","handleClick","target","setState","value","sizeScreen","base","top","window","screen","width","validateLogin","validateName","length","validateEmail","saveUser","setLogin","render","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { setUser } from '../Actions';\nimport { setToken } from '../Actions/setLogin';\nimport SettingsButton from '../Components/SettingsButton';\nimport TriviaLogo216 from '../Components/TriviaLogoSizes/TriviaLogo216';\nimport TriviaLogo144 from '../Components/TriviaLogoSizes/TriviaLogo144';\nimport TriviaLogo96 from '../Components/TriviaLogoSizes/TriviaLogo96';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  sizeScreen() {\n    const base = 765;\n    const top = 1100;\n    if (window.screen.width > top) {\n      return <TriviaLogo216 className=\"logo\" />;\n    }\n    if (window.screen.width < top && window.screen.width > base) {\n      return <TriviaLogo144 className=\"logo\" />;\n    }\n    return <TriviaLogo96 className=\"logo\" />;\n  }\n\n  validateLogin() {\n    const { name, email } = this.state;\n    const validateName = name.length > 1;\n    const validateEmail = email.length > 1;\n    return validateName && validateEmail;\n  }\n\n  handleClick() {\n    const { saveUser, setLogin } = this.props;\n    const { email, name } = this.state;\n    saveUser(email, name);\n    setLogin();\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div className=\"container\">\n        <h2 className=\"title\">\n          { this.sizeScreen() }\n        </h2>\n        <div className=\"insert-login\">\n          <div className=\"context-input\">\n              <input\n              type=\"text\"\n              name=\"name\"\n              value={ name }\n              className=\"input-login\"\n              placeholder=\"Name\"\n              data-testid=\"input-player-name\"\n              onChange={ this.handleChange }\n            />\n            <input\n              name=\"email\"\n              type=\"text\"\n              value={ email }\n              className=\"input-login\"\n              placeholder=\"E-mail\"\n              data-testid=\"input-gravatar-email\"\n              onChange={ this.handleChange }\n            />\n          </div>\n          <div className=\"context-button\">\n          <Link to=\"/trivia\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            className=\"btn-play\"\n            disabled={ !this.validateLogin() }\n            onClick={ this.handleClick }\n            >\n            Play\n            </button>\n            </Link>\n            <SettingsButton />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveUser: (email, name) => dispatch(setUser(email, name)),\n  setLogin: () => dispatch(setToken()),\n});\n\nLogin.propTypes = {\n  saveUser: PropTypes.func.isRequired,\n  setLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}