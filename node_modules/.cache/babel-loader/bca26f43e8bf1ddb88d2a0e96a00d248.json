{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Reposit\\xF3rios/trivia-project/src/Pages/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { setUser } from '../Actions';\nimport { setToken } from '../Actions/setLogin';\nimport SettingsButton from '../Components/SettingsButton';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  validateLogin() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const validateName = name.length > 1;\n    const validateEmail = email.length > 1;\n    return validateName && validateEmail;\n  }\n\n  handleClick() {\n    const _this$props = this.props,\n          saveUser = _this$props.saveUser,\n          setLogin = _this$props.setLogin;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name;\n    saveUser(email, name);\n    setLogin();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SettingsButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Trivia\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"text\",\n      value: email,\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/trivia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play\",\n      disabled: !this.validateLogin(),\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Play\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveUser: (email, name) => dispatch(setUser(email, name)),\n  setLogin: () => dispatch(setToken())\n});\n\nLogin.propTypes = {\n  saveUser: PropTypes.func.isRequired,\n  setLogin: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/mateus/RepositÃ³rios/trivia-project/src/Pages/Login.js"],"names":["React","Component","connect","PropTypes","Link","setUser","setToken","SettingsButton","Login","constructor","props","state","name","email","handleChange","bind","handleClick","target","setState","value","validateLogin","validateName","length","validateEmail","saveUser","setLogin","render","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,YAAY,CAAC;AAAEG,IAAAA;AAAF,GAAD,EAAa;AACvB,SAAKC,QAAL,CAAc;AACZ,OAACD,MAAM,CAACL,IAAR,GAAeK,MAAM,CAACE;AADV,KAAd;AAGD;;AAEDC,EAAAA,aAAa,GAAG;AAAA,wBACU,KAAKT,KADf;AAAA,UACNC,IADM,eACNA,IADM;AAAA,UACAC,KADA,eACAA,KADA;AAEd,UAAMQ,YAAY,GAAGT,IAAI,CAACU,MAAL,GAAc,CAAnC;AACA,UAAMC,aAAa,GAAGV,KAAK,CAACS,MAAN,GAAe,CAArC;AACA,WAAOD,YAAY,IAAIE,aAAvB;AACD;;AAEDP,EAAAA,WAAW,GAAG;AAAA,wBACmB,KAAKN,KADxB;AAAA,UACJc,QADI,eACJA,QADI;AAAA,UACMC,QADN,eACMA,QADN;AAAA,yBAEY,KAAKd,KAFjB;AAAA,UAEJE,KAFI,gBAEJA,KAFI;AAAA,UAEGD,IAFH,gBAEGA,IAFH;AAGZY,IAAAA,QAAQ,CAACX,KAAD,EAAQD,IAAR,CAAR;AACAa,IAAAA,QAAQ;AACT;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACiB,KAAKf,KADtB;AAAA,UACCC,IADD,gBACCA,IADD;AAAA,UACOC,KADP,gBACOA,KADP;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAGD,IAHV;AAIE,qBAAY,mBAJd;AAKE,MAAA,QAAQ,EAAG,KAAKE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAYE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAGD,KAHV;AAIE,qBAAY,sBAJd;AAKE,MAAA,QAAQ,EAAG,KAAKC,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAmBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,UAFd;AAGE,MAAA,QAAQ,EAAG,CAAC,KAAKM,aAAL,EAHd;AAIE,MAAA,OAAO,EAAG,KAAKJ,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CADF;AAgCD;;AAnE2B;;AAsE9B,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCJ,EAAAA,QAAQ,EAAE,CAACX,KAAD,EAAQD,IAAR,KAAiBgB,QAAQ,CAACvB,OAAO,CAACQ,KAAD,EAAQD,IAAR,CAAR,CADK;AAExCa,EAAAA,QAAQ,EAAE,MAAMG,QAAQ,CAACtB,QAAQ,EAAT;AAFgB,CAAf,CAA3B;;AAKAE,KAAK,CAACqB,SAAN,GAAkB;AAChBL,EAAAA,QAAQ,EAAErB,SAAS,CAAC2B,IAAV,CAAeC,UADT;AAEhBN,EAAAA,QAAQ,EAAEtB,SAAS,CAAC2B,IAAV,CAAeC;AAFT,CAAlB;AAKA,eAAe7B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCnB,KAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { setUser } from '../Actions';\nimport { setToken } from '../Actions/setLogin';\nimport SettingsButton from '../Components/SettingsButton';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  validateLogin() {\n    const { name, email } = this.state;\n    const validateName = name.length > 1;\n    const validateEmail = email.length > 1;\n    return validateName && validateEmail;\n  }\n\n  handleClick() {\n    const { saveUser, setLogin } = this.props;\n    const { email, name } = this.state;\n    saveUser(email, name);\n    setLogin();\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div>\n        <SettingsButton />\n        <h2>\n          Trivia\n        </h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={ name }\n          data-testid=\"input-player-name\"\n          onChange={ this.handleChange }\n        />\n        <input\n          name=\"email\"\n          type=\"text\"\n          value={ email }\n          data-testid=\"input-gravatar-email\"\n          onChange={ this.handleChange }\n        />\n        <Link to=\"/trivia\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ !this.validateLogin() }\n            onClick={ this.handleClick }\n          >\n            Play\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveUser: (email, name) => dispatch(setUser(email, name)),\n  setLogin: () => dispatch(setToken()),\n});\n\nLogin.propTypes = {\n  saveUser: PropTypes.func.isRequired,\n  setLogin: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}