{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Reposit\\xF3rios/trivia-project/src/Pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport UserData from '../Component/UserData';\n\nclass Feedback extends Component {\n  orderScore(a, b) {\n    return b.score - a.score;\n  }\n\n  saveRanking(data) {\n    const name = data.name,\n          score = data.score,\n          gravatarEmail = data.gravatarEmail;\n    const rankingStorage = {\n      name,\n      score,\n      picture: `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}`\n    };\n\n    if (localStorage.getItem('ranking')) {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      ranking.push(...[rankingStorage]);\n      ranking.sort(this.orderScore);\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    } else {\n      const rankingArray = [rankingStorage];\n      const rankingString = JSON.stringify(rankingArray);\n      localStorage.setItem('ranking', rankingString);\n    }\n  }\n\n  render() {\n    const _JSON$parse = JSON.parse(localStorage.getItem('state')),\n          player = _JSON$parse.player;\n\n    this.saveRanking(player);\n    let feedback = '';\n    const assert = 3;\n\n    if (player.assertions < assert) {\n      feedback = 'Podia ser melhor...';\n    }\n\n    if (player.assertions >= assert) {\n      feedback = 'Mandou bem!';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(UserData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, feedback), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, player.score, \"points\"), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, player.assertions, \"acertos\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Jogar novamente\")), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Ver Ranking\")));\n  }\n\n}\n\nexport default Feedback;","map":{"version":3,"sources":["/home/mateus/Reposit√≥rios/trivia-project/src/Pages/Feedback.js"],"names":["React","Component","Link","md5","UserData","Feedback","orderScore","a","b","score","saveRanking","data","name","gravatarEmail","rankingStorage","picture","toString","localStorage","getItem","ranking","JSON","parse","push","sort","setItem","stringify","rankingArray","rankingString","render","player","feedback","assert","assertions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,UAAU,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACf,WAAOA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAnB;AACD;;AAEDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,UACRC,IADQ,GACuBD,IADvB,CACRC,IADQ;AAAA,UACFH,KADE,GACuBE,IADvB,CACFF,KADE;AAAA,UACKI,aADL,GACuBF,IADvB,CACKE,aADL;AAEhB,UAAMC,cAAc,GAAG;AACrBF,MAAAA,IADqB;AAErBH,MAAAA,KAFqB;AAGrBM,MAAAA,OAAO,EAAG,mCAAkCZ,GAAG,CAACU,aAAD,CAAH,CAAmBG,QAAnB,EAA8B;AAHrD,KAAvB;;AAKA,QAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnC,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACAC,MAAAA,OAAO,CAACG,IAAR,CAAa,GAAG,CAACR,cAAD,CAAhB;AACAK,MAAAA,OAAO,CAACI,IAAR,CAAa,KAAKjB,UAAlB;AACAW,MAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCJ,IAAI,CAACK,SAAL,CAAeN,OAAf,CAAhC;AACD,KALD,MAKO;AACL,YAAMO,YAAY,GAAG,CAACZ,cAAD,CAArB;AACA,YAAMa,aAAa,GAAGP,IAAI,CAACK,SAAL,CAAeC,YAAf,CAAtB;AACAT,MAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCG,aAAhC;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACYR,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADZ;AAAA,UACCW,MADD,eACCA,MADD;;AAEP,SAAKnB,WAAL,CAAiBmB,MAAjB;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,CAAf;;AACA,QAAIF,MAAM,CAACG,UAAP,GAAoBD,MAAxB,EAAgC;AAC9BD,MAAAA,QAAQ,GAAG,qBAAX;AACD;;AACD,QAAID,MAAM,CAACG,UAAP,IAAqBD,MAAzB,EAAiC;AAC/BD,MAAAA,QAAQ,GAAG,aAAX;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,QADJ,CAFF,EAKE;AAAG,qBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,MAAM,CAACpB,KADX,WALF,EASE;AAAG,qBAAY,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIoB,MAAM,CAACG,UADX,YATF,EAaE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAbF,EAqBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CArBF,CADF;AAiCD;;AApE8B;;AAuEjC,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport UserData from '../Component/UserData';\n\nclass Feedback extends Component {\n  orderScore(a, b) {\n    return b.score - a.score;\n  }\n\n  saveRanking(data) {\n    const { name, score, gravatarEmail } = data;\n    const rankingStorage = {\n      name,\n      score,\n      picture: `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}`,\n    };\n    if (localStorage.getItem('ranking')) {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      ranking.push(...[rankingStorage]);\n      ranking.sort(this.orderScore);\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    } else {\n      const rankingArray = [rankingStorage];\n      const rankingString = JSON.stringify(rankingArray);\n      localStorage.setItem('ranking', rankingString);\n    }\n  }\n\n  render() {\n    const { player } = JSON.parse(localStorage.getItem('state'));\n    this.saveRanking(player);\n    let feedback = '';\n    const assert = 3;\n    if (player.assertions < assert) {\n      feedback = 'Podia ser melhor...';\n    }\n    if (player.assertions >= assert) {\n      feedback = 'Mandou bem!';\n    }\n    return (\n      <div>\n        <UserData />\n        <p data-testid=\"feedback-text\">\n          { feedback }\n        </p>\n        <p data-testid=\"feedback-total-score\">\n          { player.score }\n          points\n        </p>\n        <p data-testid=\"feedback-total-question\">\n          { player.assertions }\n          acertos\n        </p>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n          >\n            Jogar novamente\n          </button>\n        </Link>\n        <Link to=\"/ranking\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n          >\n            Ver Ranking\n          </button>\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}